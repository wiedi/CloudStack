// Copyright 2012 Citrix Systems, Inc. Licensed under the
// Apache License, Version 2.0 (the "License"); you may not use this
// file except in compliance with the License.  Citrix Systems, Inc.
// reserves all rights not expressly granted by the License.
// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// Automatically generated by addcopyright.py at 04/03/2012
package com.cloud.agent.api.routing;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import com.cloud.network.vpc.StaticRoute;
import com.cloud.network.vpc.StaticRouteProfile;

/**
 * @author Alena Prokharchyk
 */
public class SetStaticRouteCommand extends NetworkElementCommand{
    StaticRouteProfile[] staticRoutes;
    
    protected SetStaticRouteCommand() {
    }
    
    public SetStaticRouteCommand(List<StaticRouteProfile> staticRoutes) {
        this.staticRoutes = staticRoutes.toArray(new StaticRouteProfile[staticRoutes.size()]); 
    }

    public StaticRouteProfile[] getStaticRoutes() {
        return staticRoutes;
    }

    public boolean isEmpty() {
        if(staticRoutes == null || staticRoutes.length == 0 ) {
            return true;
        }
        return false;
    }
    public String[][] generateSRouteRules() {
        String [][] result = new String [2][];
        Set<String> toAdd = new HashSet<String>();
        for (StaticRouteProfile route: staticRoutes) {
            /*  example  :  ip:gateway:cidr,
             */
            if( route.getState() == StaticRoute.State.Active || route.getState() == StaticRoute.State.Add ) {
                String entry = route.getIp4Address()+ ":" + route.getGateway() + ":" + route.getCidr();
                toAdd.add(entry);
            }
        }
        result[0] = toAdd.toArray(new String[toAdd.size()]);
        return result;
    }
}
